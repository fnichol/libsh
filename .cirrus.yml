---
check_task:
  name: check
  only_if:
    $CIRRUS_BRANCH !=~ ".*\.tmp" && $CIRRUS_BRANCH != $CIRRUS_DEFAULT_BRANCH
  container:
    image: fnichol/check-shell:latest
  check_script: make check

test_task:
  name: test-${PLATFORM}-${SHELL_BIN}
  alias: tests
  only_if:
    $CIRRUS_BRANCH !=~ ".*\.tmp" && $CIRRUS_BRANCH != $CIRRUS_DEFAULT_BRANCH
  matrix:
    - env:
        PLATFORM: linux
        matrix:
          - SHELL_BIN: apple-bash-23
          - SHELL_BIN: apple-bash-44
          - SHELL_BIN: apple-bash-76
          - SHELL_BIN: apple-bash-94
          - SHELL_BIN: apple-bash-106.220
          - SHELL_BIN: bash-2
          - SHELL_BIN: bash-3
          - SHELL_BIN: bash-3.00
          - SHELL_BIN: bash-4
          - SHELL_BIN: bash-5
          - SHELL_BIN: busybox-1.23.2-ash
          - SHELL_BIN: busybox-1.30.1-ash
          - SHELL_BIN: dash-0
          - SHELL_BIN: dash-0.5.10.2
          - SHELL_BIN: ksh93-2008-07-25
            LANG: C
          - SHELL_BIN: ksh93-2012-08-01
          # - SHELL_BIN: zsh-3
          # - SHELL_BIN: zsh-4
          - SHELL_BIN: zsh-5
      container:
        dockerfile: .ci/Dockerfile.ci.test
      test_script: make test
    - env:
        PLATFORM: macos
        matrix:
          - SHELL_BIN: bash-3
          - SHELL_BIN: bash-5
            PKG: bash
          - SHELL_BIN: dash
            PKG: dash
          - SHELL_BIN: sh
          - SHELL_BIN: ksh
          - SHELL_BIN: zsh
      macos_instance:
        image: catalina-base
      setup_script: |
        if [ -n "${PKG:-}" ]; then brew install "$PKG"; fi
        if [ "$SHELL_BIN" = "bash-3" ]; then
          ln -snvf /bin/bash /usr/local/bin/bash-3
        fi
        if [ "$SHELL_BIN" = "bash-5" ]; then
          ln -snvf /usr/local/bin/bash /usr/local/bin/bash-5
        fi
      test_script: make test
    - env:
        PLATFORM: freebsd
        matrix:
          - SHELL_BIN: bash
            PKG: shells/bash
          - SHELL_BIN: dash
            PKG: shells/dash
          # - SHELL_BIN: jsh
          #   PKG: shells/heirloom-sh
          - SHELL_BIN: ksh
            PKG: shells/pdksh
          - SHELL_BIN: ksh93
            PKG: shells/ksh93
          # - SHELL_BIN: mksh
          #   PKG: shells/mksh
          - SHELL_BIN: oksh
            PKG: shells/oksh
          - SHELL_BIN: sh
          - SHELL_BIN: zsh
            PKG: shells/zsh
      freebsd_instance:
        image_family: freebsd-12-2
      setup_script: |
        pkg install --yes devel/git devel/gmake textproc/gsed
        if [ -n "${PKG:-}" ]; then pkg install --yes "$PKG"; fi
      test_script: gmake test

build_libs_task:
  name: build-libs
  only_if:
    $CIRRUS_TAG != '' || $CIRRUS_BRANCH == 'staging' || $CIRRUS_BRANCH ==
    'trying'
  depends_on:
    - check
    - tests
  container:
    dockerfile: .ci/Dockerfile.ci
  build_script: make build
  checksums_script: |
    cd build
    distribs="$(ls *.sh)"
    for d in $distribs; do ../.ci/build-checksums.sh "$d"; done
  libraries_artifacts:
    path: "build/*"

ci_finished_task:
  name: ci-finished
  depends_on:
    - check
    - tests
    - build-libs
  container:
    dockerfile: .ci/Dockerfile.ci
  clone_script: mkdir -p "$CIRRUS_WORKING_DIR"
  success_script: /bin/true

create_github_release_task:
  name: create-github-release
  only_if: $CIRRUS_TAG != ''
  depends_on:
    - build-libs
  container:
    dockerfile: .ci/Dockerfile.ci
  env:
    GITHUB_TOKEN: ENCRYPTED[7015be161905de99d7ba67dcd901f207c385a605e753f2b396728c00d114a3821061f9f05611682a57836610b0f7d38a]
  create_github_release_script: |
    if ! upload_url="$(
      ./.ci/cirrus-release.sh gh_create_version_release \
        "$CIRRUS_REPO_FULL_NAME" \
        "$CIRRUS_TAG"
    )"; then
      echo "xxx Failed to create release" >&2
      exit 1
    fi
    echo "$upload_url" > /tmp/upload_url
  download_cirrus_artifacts_script: |
    cr="$(readlink -f ./.ci/cirrus-release.sh)"
    manifests="$(cd .ci && ls -1 *.manifest.txt)"
    for m in $manifests; do
      manifest="$(readlink -f ".ci/$m")"
      mkdir -p /tmp/release
      cd /tmp/release
      awk '{ print $2 }' "$manifest" | sort | uniq | while read -r a; do
        "$cr" ci_download "build-libs/libraries/build/$a"
        "$cr" ci_download "build-libs/libraries/build/$a.md5"
        "$cr" ci_download "build-libs/libraries/build/$a.sha256"
      done
      cp "$manifest" .
      cd -
    done
    ls -l /tmp/release/*
  upload_github_release_artifacts_script: |
    url="$(cat /tmp/upload_url)"
    ./.ci/cirrus-release.sh gh_upload_all "$url" /tmp/release

publish_github_release_task:
  name: publish-github-release
  only_if: $CIRRUS_TAG != ''
  depends_on:
    - create-github-release
  container:
    dockerfile: .ci/Dockerfile.ci
  env:
    GITHUB_TOKEN: ENCRYPTED[7015be161905de99d7ba67dcd901f207c385a605e753f2b396728c00d114a3821061f9f05611682a57836610b0f7d38a]
  publish_release_script: |
    ./.ci/cirrus-release.sh gh_publish_release \
      "$CIRRUS_REPO_FULL_NAME" "$CIRRUS_TAG" CHANGELOG.md

publish_install_sh_task:
  name: publish-install-sh
  only_if: $CIRRUS_TAG != ''
  depends_on:
    - publish-github-release
  container:
    dockerfile: .ci/Dockerfile.ci
  env:
    GITHUB_TOKEN: ENCRYPTED[7015be161905de99d7ba67dcd901f207c385a605e753f2b396728c00d114a3821061f9f05611682a57836610b0f7d38a]
  publish_install_sh_script: |
    ./.ci/cirrus-release.sh gh_download \
      "$CIRRUS_REPO_FULL_NAME" "$CIRRUS_TAG" install.sh
    ./.ci/update-gh-pages-install.sh install.sh

release_finished_task:
  name: release-finished
  only_if: $CIRRUS_TAG != ''
  depends_on:
    - create-github-release
    - publish-github-release
    - publish-install-sh
  container:
    dockerfile: .ci/Dockerfile.ci
  clone_script: mkdir -p "$CIRRUS_WORKING_DIR"
  success_script: /bin/true
